makeCacheMatrix <- function(x = matrix()) {m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x= matrix(), ...) {m<-x$getmatrix()
if(!is.null(m)){return(m)}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
## Testing the "Inverse Matrix" function
x$set(matrix(1:9, 3, 3))
makeCacheMatrix <- function(x = matrix()) {m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x= matrix(), ...) {m<-x$getmatrix()
if(!is.null(m)){return(m)}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
q<- makeCacheMatrix
m<- matrix(c(2,4,1,3,2,9,8,1,3), 3, 3)
m
q$set(m)
makeCacheMatrix <- function(x = matrix()) {m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x= matrix(), ...) {m<-x$getmatrix()
if(!is.null(m)){return(m)}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
## Test
q<- makeCacheMatrix(
m<- matrix(c(2,4,1,3,2,9,8,1,3), 3, 3)
makeCacheMatrix <- function(x = matrix()) {m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
makeCacheMatrix <- function(x = matrix()) {m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x= matrix(), ...) {m<-x$getmatrix()
if(!is.null(m)){return(m)}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
q<- makeCacheMatrix()
m<- matrix(c(2,4,1,3,2,9,8,1,3), 3, 3))
m<- matrix(c(2,4,1,3,2,9,8,1,3), 3, 3)
makeCacheMatrix <- function(x = matrix()) {m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x= matrix(), ...) {m<-x$getmatrix()
if(!is.null(m)){return(m)}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
## TESTING THE FUNCTION
q<- makeCacheMatrix()
m<- matrix(c(2,4,1,3,2,9,8,1,3), 3, 3)
q$set(m)
cacheSolve(q)
makeCacheMatrix <- function(x = matrix()) {m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function() x
setmatrix<-function(solve) m<<- solve
getmatrix<-function() m
list(set=set, get=get,
setmatrix=setmatrix,
getmatrix=getmatrix)
}
cacheSolve <- function(x= matrix(), ...) {m<-x$getmatrix()
if(!is.null(m)){return(m)}
matrix<-x$get()
m<-solve(matrix, ...)
x$setmatrix(m)
m
}
q<- makeCacheMatrix()
m<- matrix(c(2,4,1,3,2,9,8,1,3), 3, 3)
q$set(m)
cacheSolve(q)
